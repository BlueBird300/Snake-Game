<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        canvas {
            border: 1px solid #000;
            background-color: #fff;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");

        const gridSize = 20;
        const canvasSize = canvas.width;
        let snake = [{ x: 200, y: 200 }];
        let direction = { x: 0, y: 0 };
        let food = { x: 0, y: 0 };

        function getRandomFoodPosition() {
            let x, y;
            do {
                x = Math.floor(Math.random() * (canvasSize / gridSize)) * gridSize;
                y = Math.floor(Math.random() * (canvasSize / gridSize)) * gridSize;
            } while (snake.some(segment => segment.x === x && segment.y === y));
            return { x, y };
        }

        function drawSnake() {
            ctx.fillStyle = "green";
            snake.forEach(segment => {
                ctx.fillRect(segment.x, segment.y, gridSize, gridSize);
            });
        }

        function drawFood() {
            ctx.fillStyle = "red";
            ctx.fillRect(food.x, food.y, gridSize, gridSize);
        }

        function moveSnake() {
            const newHead = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };

            if (newHead.x < 0 || newHead.x >= canvasSize || newHead.y < 0 || newHead.y >= canvasSize || snake.some(segment => segment.x === newHead.x && segment.y === newHead.y)) {
                alert("Game Over");
                document.location.reload();
            }

            snake.unshift(newHead);
            if (newHead.x === food.x && newHead.y === food.y) {
                food = getRandomFoodPosition();
            } else {
                snake.pop();
            }
        }

        function gameLoop() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawSnake();
            drawFood();
            moveSnake();
        }

        function changeDirection(event) {
            switch (event.key) {
                case "ArrowUp":
                    if (direction.y === 0) {
                        direction = { x: 0, y: -gridSize };
                    }
                    break;
                case "ArrowDown":
                    if (direction.y === 0) {
                        direction = { x: 0, y: gridSize };
                    }
                    break;
                case "ArrowLeft":
                    if (direction.x === 0) {
                        direction = { x: -gridSize, y: 0 };
                    }
                    break;
                case "ArrowRight":
                    if (direction.x === 0) {
                        direction = { x: gridSize, y: 0 };
                    }
                    break;
            }
        }

        document.addEventListener("keydown", changeDirection);

        food = getRandomFoodPosition();
        setInterval(gameLoop, 100);
    </script>
</body>
</html>

